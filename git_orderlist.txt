mkdir	创建文件
pwd		显示当前目录
git init	 创建管理仓库
ls -ah	 	 可以查看隐藏文件
git add <file>  	把文件添加到仓库(从工作区workstations添加到版本库的暂存区stage,每次修改后都需要git add）
git commit -m <message> 	把文件提交到仓库（把文件从暂存区提交到主线区master，master区有一个指针HEAD,可以指向不同的版本号）
git status		查看工作区状态
get diff	 查看修改内容
git reset --hard commit_id	在历史版本之间穿梭
git reset --hard HEAD  指向当前版本
git reset --hard HEAD^	指向上一个版本
git reset --hard HEAD^^	指向上上一个版本
git reset --hard HEAD~189	指向之前第189个版本

git log 	查看提交历史
git log --pretty=oneline	查看提交的历史版本号和名称
git reflog	查看历史命令

git checkout -- file 	丢弃工作区的修改，其实就是用版本库里的版本替代工作区的版本，都可以一键还原
git reset HEAD <file>	丢弃暂存区的修改，如果需要丢掉工作去的修改需要继续执行git checkout -- file

git rm <file>	删除一个文件，删除后只能恢复到版本库里最新的内容，最后一次修改未提交的内容无法恢复

ssh-keygen -t rsa -C "youremail@example.com"	创建gitssh key

git连接、传输支持多种协议：
git remote add origin git@server-name:path/repo-name.git	关联一个远程库，使用git协议，速度快，默认的git:// 协议使用ssh 连接
git remote add origin https://github.com/lvhuxu86/learngit.git	本地仓库关联到远程仓库，使用http:// 协议，速度慢，每次推送都必须输入口令，但是在公司网络有时候会限制只开启http协议的某端口，只能用http协议
或者 git remote add origin git@github.com:git用户名/learngit.git
git push -u origin master	
	从当前分支master推送代码到远程仓库origin 
	首次同步空库需要加 -u ，git会把本地master分支和远程的master分支关联起来，以后推送就不需要了
	origin是git默认的库名，可以修改
	
git clone git@github.com:lvhuxu86/gitskills.git		从git@github.com:lvhuxu86/gitskills.git路径克隆仓库到本地

git branch		查看分支
git branch <name>	创建分支
git checkout <name>		切换分支
git checkout -b <name>		创建并切换分支
git merge <name>		合并某个分支到当前分支
git branch -d <name>	删除分支
git branch -D <name>	强制删除未合并的分支

git log --graph		查看分支合并图
git merge --no-ff -m "提交描述" dev(需要被合并的分支名）

git stash	将当前工作区暂存
git stash pop 回到工作去，并删除暂存区内容，等于git stash apply + git stash drop
git stash apply		从暂存区恢复工作区
git stash apply stash@{x}	恢复到指定的暂存区
git stash drop		删除暂存区
git stash list		查看暂存区列表





	
	

